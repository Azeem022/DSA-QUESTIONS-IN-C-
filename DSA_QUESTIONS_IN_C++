//####################################### QUESTION CONVERT DECIMAL TO BINARY ####################################################################
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the number"<<n<<endl;
	cin>>n;
	int ans = 0;
	int i = 0;
	while(n!=0)
	{
		int bit = n & 1;
		ans = (bit * pow(10,i)+ans);
		n = n>>1;
		i++;
	}
	cout<<"Answer is :"<<ans<< endl;
	return 0;
}

                          OR         OR         OR          OR            OR           OR             OR             OR


//################################## DECIMAL TO BINARY #################################################
#include<iostream>
using namespace std;
int main()
{
    int num;
    cout<<"Enter the number:";
    cin>>num;
    int rem, ans=0,mul=1;
    while(num>0)
    {
    	//remainder
    	rem = num%2;
    	//quotient
    	num = num/2;
    	//ans
    	ans= rem*mul+ans;
    	//mul
    	mul=mul*10;
	}
	cout<<"Answer is :"<<ans;
	return 0;
}

TRICK FOR CONVERSION OF BINARY TO DECIMAL AND DECIMAL TO BINARY ONLY YOU HAVE TO CHANGE 2 IN PLACE OF 10 AND 10 IN PLACE OF 2.

//#######################################QUESTION BINARY TO DECIMAL####################################################################
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the number"<<n<<endl;
	cin>>n;
	int ans = 0;
	int i = 0;
	while(n!=0)
	{
		int digit = n%10;
		if(digit == 1)
		{
			ans = ans + pow(2,i);
		}
		n = n/10;
		i++;
	}
	cout<<"Answer is :"<<ans<< endl;
	return 0;
}

                                      OR         OR           OR            OR                 OR                  OR                     OR

//################################## BINARY TO DECIMAL #################################################
#include<iostream>
using namespace std;
int main()
{
    int num;
    cout<<"Enter the number:";
    cin>>num;
    int rem, ans=0,mul=1;
    while(num>0)
    {
    	//remainder
    	rem = num%10;
    	//quotient
    	num = num/10;
    	//ans 
    	ans= rem*mul+ans;
    	//mul
    	mul=mul*2;
	}
	cout<<"Answer is :"<<ans;
	return 0;
}


//#######################################QUESTION GIVE AN INTEGER NUMBER N,RETURN THE DIFFERENCE BETWEEN THE PRODUCT OF ITS DIGIT AND SUM OF ITS DIGIT####################################################################
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the number"<<n<<endl;
	cin>>n;
    int last_digit,product=1,sum=0;
	while(n!=0)
	{
		int last_digit = n%10;
		product = last_digit*product;
		sum = sum+ last_digit;
		n = n/10;

	}
	int difference = product - sum;
	cout<<"product is :"<<product<<endl;
	cout<<"sum is :"<<sum<<endl;
	cout<<"difference is :"<<difference<< endl;
	return 0;
}

//############################## QUESTION GIVE A SIGNED 32_BIT INTEGER X, RETURN X WITH ITS DIGITS REVERSED. 
//IF REVERSING X CUSES THE VALUE TO GO OUTSIDE THE SIGNED 32_BIT INTEGER RANGE [-2*(32),2(31)-1],THEN RETURN 0 #################################
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the number"<<n<<endl;
	cin>>n;
    int last_digit,ans=0;
	while(n!=0)
	{
		int last_digit = n%10;
	 if(ans > INT_MAX/10 || ans < INT_MIN/10)
	 {
	 	return 0;
	 }
	 ans = (ans * 10) + last_digit;
	 n=n/10;
	}
	cout<<"anser is :"<<ans<<endl;
	return 0;
}

       OR             OR         OR           OR            OR                 OR                  OR                     OR

//############################## QUESTION GIVE A SIGNED 32_BIT INTEGER X, RETURN X WITH ITS DIGITS REVERSED. 
//IF REVERSING X CUSES THE VALUE TO GO OUTSIDE THE SIGNED 32_BIT INTEGER RANGE [-2*(32),2(31)-1],THEN RETURN 0 #################################

//################################## GIVEN AN INTEGER NUM, REPEATIDLY ADD ALL ITS DIGIT UNTIL THE RESULT HAS ONLY ONE DIGIT, AND RETURN IT. #################################################
#include<iostream>
using namespace std;
int main()
{
    int num;
    cout<<"Enter the number:";
    cin>>num;
    int ans=0,rem,div;
    while(num!=0)
    {
    	rem=num%10;
    	num=num/10;
    	if(ans>INT_MAX/10 || ans<INT_MIN/10)
    	return 0;
    	ans=ans*10+rem;
	}
	cout<<ans;
	return 0;
}



//################################## GIVEN AN INTEGER NUM, REPEATIDLY ADD ALL ITS DIGIT UNTIL THE RESULT HAS ONLY ONE DIGIT, AND RETURN IT. #################################################
#include<iostream>
using namespace std;
int main()
{
    int num;
    cout<<"Enter the number:";
    cin>>num;
    while(num>9)
    {
    	int rem, ans=0;
    	while(num>0)
    {
    	//remainder
    	rem = num%10;
    	//quotient  
    	num = num/10;
    	//ans 
    	ans= rem+ans;
    	//mul
	}
	 num=ans;
	}
	cout<<num;
	return 0;
}

//################################## GIVEN AN INTEGER n,RETURN TRUE IF IT THE POWER OF 2 OTHERWISE IT RETURN FALSE. #################################################
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the value of n:"<<endl;
	cin>>n;
	if(n<1)
	return 0;
	while(n!=1)
	{
		if(n%2==1)
		return 0;
		n=n/2;
	}
	cout<<"yes it is the power of 2"<<endl;
	return 0;
}

//################################## SQUARE ROOT OF N NUMBER. #################################################
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the value of n:"<<endl;
	cin>>n;
	cout<<sqrt(n);
	return 0;
}


//################################## PALENDROME OR NOT. #################################################
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
	int x;
	cout<<"Enter the value of x:"<<endl;
	cin>>x;
	if(x<0)
	return 0;
	int num = x, rem, ans=0;
	while(num!=0)
	{
		rem = num%10;
		num =  num/10;
		if(ans>INT_MAX)
		return 0;
		ans = ans*10+rem;
	};
	if(ans==x)
	cout<<"Palendrome"<<endl;
	else
	cout<<"Not Palendrome"<<endl;
	return 0;
}

//################################## COMPLEMENT OF AN INTEGER. #################################################
#include<iostream>
#include<cmath>
using namespace std;
int main()
{
    int n;
    cout<<"Enter the value of n:"<<endl;
    cin>>n;
    if(n==0)
    return 0;
    int ans=0,rem,mul=1;
    while(n!=0)
    {
    	rem=n%2;
    	rem=rem^1;
    	n=n/2;
    	ans = ans+rem*mul;
    	mul=mul*2;
	}
	cout<<ans;
	return 0;
}


//################################## ARMSTRONG NUMBER OR NOT WITH HOW MANY DIGITS. #################################################
#include<iostream>
using namespace std;
#include<cmath>
int countdigit(int n)
{
	int count = 0;
	while(n!=0)
	{
		count ++;
		n=n/10;
	}
	return count;
}
bool Armstrong(int num , int digit)
{
	int n=num,ans=0,rem;
	while(n!=0)
	{
		rem=n%10;
		n=n/10;
		ans=ans+pow(rem,digit);
	}
	if(ans==num)
	return 1;
	else
	return 0;
}
int main()
{
	int num;
	cout<<"Enter the value of number:"<<endl;
	cin>>num;
	int digit = countdigit(num);
	cout<<"number of digit:"<<countdigit(num)<<endl;;
	cout<<"Is Armstrong number:"<<Armstrong(num,digit);//?"yes":"no";
	return 0;
}

===================================== PRINT SMALLEST ARRAY IN AN ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int arr[5]= {55,63,33,44,55};
	int ans= INT_MAX;
	for(int i=0;i<5;i++)
	{
		if(arr[i]<ans){
			ans=arr[i];
		}
	}
	cout<<ans;
	return 0;
}

//===================================== PRINT LARGEST ARRAY IN AN ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int arr[5]= {55,63,33,44,55};
	int ans= INT_MIN;
	for(int i=0;i<5;i++)
	{
		if(arr[i]>ans){
			ans=arr[i];
		}
	}
	cout<<ans;
	return 0;
}

//===================================== SEARCHING OF ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int n,x;
	cout<<"entre the value of n:"<<endl;
	cin>>n;
	cout<<"Enter the value which you want to find:"<<endl;
	cin>>x;
	int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	for(int i=0;i<=n;i++)
	{
	    if(arr[i]==x)
	    {
	    	cout<<"position of your element is:"<<i<<endl;
		}
	}
	return -1;
	return 0;
}

//===================================== REVERSE OF AN ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int arr[6]= {1,2,3,4,5,6};
	int start=0, end=5;
	while(start<end)
	{
		swap(arr[start],arr[end]);
		start++;
		end--;
	}
	for(int i=0;i<6;i++)
	cout<<arr[i]<<" ";
	return 0;
}

//===================================== SECOND LARGEST ELEMENT IN AN ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	int ans=-1;
	//Largest element
	for(int i=0;i<n;i++)
	{
		if(arr[i]>ans)
		ans=arr[i];
	}
	//Second largest
	int second = -1;
	for(int i=0;i<n;i++)
	{
		if(arr[i]!=ans)
		second = max(second,arr[i]);
	};
	cout<<"second largest element is:"<<second<<endl;
	return 0;
}

//===================================== MISSING ELEMENT IN AN ARRAY =======================================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	int arr[n];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	int sum=0;
	for(int i=0;i<n-1;i++)
	{
		sum+=arr[i];
	}
	int ans = n*(n+1)/2;
	cout<<"missing element is:"<< ans - sum;
	return 0;
}


//===================================== FIND AN ARRAY IN FIBONACCI SERIES  =======================================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	int arr[1000];
	arr[0] = 0;
	arr[1] = 1;
	for(int i=2;i<=n-1;i++)
    {
    arr[i] = arr[i-1] + arr[i-2];
	}
	cout<<arr[n-1]<<" ";
	return 0;
}

//===================================== SELECTION SORTING OF ARRAY  =======================================
#include<iostream>
using namespace std;
int main()
{
	int arr[6] = { 10,8,6,4,2,1};
	for(int i=0;i<5;i++)
	{
                	//it assume that the index which stored the smallest element initially 
		int index = i;
		for(int j=i+1;j<6;j++)
		{
			if(arr[j]<arr[index])
			index = j;
		}
		swap(arr[i],arr[index]);
	}
	for(int i=0;i<6;i++)
	{
		cout<<arr[i]<<" ";
	}
}

//================================== INSERTION SORT =========================================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"enter the size of an array:"<<endl;
	cin>>n;
	int arr[1000];
	for(int i=0;i<n;i++)
	cin>>arr[i];
	for(int i=1;i<n;i++)
	{
		for(int j=i;j>0;j--)
		{
			if(arr[j]<arr[j-1])
			swap(arr[j],arr[j-1]);
			else
			break;
		}
	}
	for(int i=0;i<n;i++)
	{
		cout<<arr[i]<<" ";
	}
	return 0;
}

//================================== BINARY SEARCH =========================================
#include<iostream>
using namespace std;
int BinarySearch(int arr[], int n,int key)
{
	//start , end , mid
	int start = 0, end = n-1, mid;
	while(start<=end)
	{
		//mid ko find kro
		mid = start+(end-start)/2;
		//arr[mid]==key
		if(arr[mid]==key)
		return mid;
		//arr[mid]<key
		else if (arr[mid]<key)
		start = mid + 1;
		//arr[mid]>key
		else
		mid-1;
	}
	return -1;
}
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	int arr[1000];
	cout<<"Enter element in an array:"<<endl;
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	int key;
	cout<<"Enter the value of key:"<<endl;
	cin>>key;
	cout<<BinarySearch(arr,n,key)<<endl;
	return 0;
}

//============================ SEARCH POSITION OF UNPRESENT ARRAY IN ARRAY LIST USING BINARY SEARCH =========================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	if(n <= 0)
	{
		cout<<"Invalid array size."<<endl;
		return 1;
	}
	int target;
	cout<<"Enter the value of your target:"<<endl;
	cin>>target;
	cout<<"input the values of your array"<<endl;
	int arr[1000];
	for(int i = 0; i<n;i++)
	{
		cin>>arr[i];
	}
	//finding the first occurence
	int start = 0, end = n-1, mid , ans=n;
	while(start<= end)
	{
		mid = start + (end - start)/2;
		if(arr[mid] == target)
		{
			ans = mid;
			break;
		}
		else if(arr[mid]<target)
		{
			start = mid+1;
		}
		else
		{
			ans = mid;
			end = mid -1;
		}
	}
	cout<<"your target value will on " << ans <<" position"<<endl;
	return 0;
}

//===========================SQUARE ROOT USING BINARY SEARCH ==========================
#include<iostream>
using namespace std;
int sqrt(int n){
	int start=1;
	int end=n;
	int ans =1;
	while(start<=end)
	{
		int mid = start+(end-start)/2;
		int sqrt = mid*mid;
		if(sqrt<=n){
			start =mid +1;
			ans = mid;
		}
		else{
			end = mid - 1;
		}
	}
	return ans;
}
int main()
{
	int n;
	cout<<"Enter the value of n:"<<endl;
	cin>>n;
	cout<<"square root of "<<n<<" is : "<<sqrt(n) <<endl;
	return 0;
}

//============================PEAK INDEX IN A MOUNTAIN ARRAY ==================================
#include<iostream>
using namespace std;
int main()
{
	int n;
	cout<<"Enter the size of an array:"<<endl;
	cin>>n;
	cout<<"fill your array element:"<<endl;
	int arr[1000];
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	} 
	 int start = 0, end = n-1, mid;
	 while(start <= end)
	 {
	 	mid = end+(start-end)/2;
	 	//Peak element
	 	if(arr[mid] > arr[mid-1] && arr[mid] < arr[mid+1])
	 	return mid;
	 	else if(arr[mid]>arr[mid-1])
	 	start = mid + 1;
	 	else
	 	end = mid -1;
	 }
	 cout<<"Your peak element on " <<mid <<" position";
	return 0;
}
